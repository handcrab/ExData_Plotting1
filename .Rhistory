my_name <- c(my_char, "Max")
my_name
paste(my_char, collapse = " ")
paste(my_name, collapse = " ")
paste("Hello",
| "world!", sep = " ")
paste("Hello","world!", sep = " ")
paste(1:3, c("X", "Y", "Z"), sep = "")
LETTERS
paste(LETTERS, 1:4, sep = "-")
x<- c(44, NA, 5, NA)
x*3
y <- rnorm(1000)
z <- rep(NA, 1000)
my_data <- sample(c(y, z), 100)
my_na <- is.na(my_data)
my_na
my_data == NA
sum(my_data)
sum(my_na)
my_data
0/0
Inf - Inf
x
x[1:10]
x[is.na(x)]
y <- x[!is.na(x)]
y
y[y > 0]
x[x > 0]
x[!is.na(x) & x > 0]
x[c(3,5,7)]
x[0]
x[3000]
x[c(-2, -10)]
x[-c(2, 10)]
vect <- c(foo = 11, bar = 2, norf = NA)
vect
names(vect)
vect2 <- c(11,2, NA)
names(vect2) <- c("foo", "bar", "norf")
identical(vect,vect2)
vect["bar"]
vect[c("foo", "bar")]
my_vector <- 1:20
my_vector
dim(my_vector)
length(my_vector)
dim(my_vector) <- c(4, 5)
dim(my_vector)
attributes(my_vector)
my_vector
class(my_vector)
my_matrix <- my_vector
?matrix
matrix(data = 1:20, nrow = 4, ncol = 5)
matrix(1:20, 4, 5)
my_matrix2 <_ matrix(data = 1:20, nrow = 4, ncol = 5)
my_matrix2 <- matrix(data = 1:20, nrow = 4, ncol = 5)
identical(my_matrix, my_matrix2)
patients <- c("Bill", "Gina", "Kelly",  "Sean")
cbind(patients, my_matrix)
my_data <-data.frame(patients, my_matrix)
my_data
class(my_data)
cnames <- c("patient", "age", "weight", "bp", "rating", "test")
colnames(data frame) <- cnames
colnames(data_frame) <- cnames
colnames(my_data) <- cnames
my_data
library(datasets)
data(mtcars)
?mtcars
x = c(1,2)
y= c(3,4)
mean(x)
mean(y)
mean(x,y)
mean(mtcars$mpg, mtcars$cyl)
with(mtcars, tapply(mpg, cyl, mean))
apply(mtcars, 2, mean)
mean(mtcars$mpg)
apply(mtcars, 2, mean)
tapply(mtcars$cyl, mtcars$mpg, mean)
mtcars$cyl[1,]
mtcars$cyl[,1]
mtcars$cyl
mean(mtcars$mpg) / mtcars$cyl
mean(mtcars$mpg) / mean(mtcars$cyl)
?tapply
require(stats)
warpbreaks
warpbreaks[,-1]
tapply(warpbreaks$breaks, warpbreaks[,-1], sum)
tapply(warpbreaks$breaks, sum)
mtcars$mpg
mtcars$cyl
?apply
head(mtcars)
with(mtcars, tapply(mpg, cyl, mean))
tapply(mtcars$cyl, mtcars$mpg, mean)
tapply(mtcars$mpg,mtcars$cyl, mean)
?mtcars
tapply(mtcars$hp,mtcars$cyl, mean)
r = tapply(mtcars$hp,mtcars$cyl, mean)
class(r)
r[1]
r["4"]
r["8"]-r["4"]
r["4"]-r["8"]
debug(ls)
ls()
q
R.version.string
install_from_swirl("Getting and Cleaning Data")
library(swirl)
install_from_swirl("Getting and Cleaning Data")
swirl()
path2csv
mydf = read.csv(path2csv, stringsAsFactors = FALSE)
mydf = read.csv(path2csv, stringsAsFactors = FALSE)
mydf <- read.csv(path2csv, stringsAsFactors = FALSE)
dim(mydf)
head(mydif)
head(mydf)
library(dplyr)
packageVersion("dplyr")
cran <- tbl_df(mydf)
rm("mydf")
tbl_df
print(tbl_df)
cran
?manip
select(cran, ip_id, package, country)
5:20
select(cran, r_arch:country)
select(cran, country:r_arch)
cran
select(cran, -time)
select(cran, -X:size)
-5:20
-(5:20)
select(cran, -(X:size)
)
filter(cran, package == "swirl")
filter(cran, r_version == "3.1.1", country == "US")
?Comparison
filter(cran, r_version <= "3.0.2", country == "IN")
filter(cran, country == "US" | country == "IN")
filter(cran, size>100500 & r_os == 'linux-gnu')
filter(cran, size>100500 , r_os == 'linux-gnu')
is.na(c(3, 5, NA, 10))
!is.na(c(3, 5, NA, 10))
filter(cran, !is.na(r_version))
cran2 =select(cran, size:ip_id)
cran2 <- select(cran, size:ip_id)
cran2
arrange(cran2, ip_id)
arrange(cran2, to_dec(ip_id))
arrange(cran2, desc(ip_id))
arrange(cran2, package, ip_id)
arrange(cran2, country, desc(r_version), ip_id)
cran3 =select(cran, ip_id, package, size)
cran3 <- select(cran, ip_id, package, size)
cran3
mutate(cran3, size_mb = size / 2^20)
cran3
mutate(cran3, size_mb = size / 2^20, size_gb = size_mb / 2^10)
mutate(cran3, correct_size = size + 1000)
summarize(cran, avg_bytes = mean(size))
0
as.numeric ('10 ')
as.numeric('10')
as.character(10)
as.numeric(as.character(10))
file.name = 'household_power_consumption.txt'
library(data.table)
dat = fread(file.name, na.strings = c('?'))
# 3. convert types
subset = dat[Date %in% c("1/2/2007","2/2/2007")]
num.dat = subset[, -c(1,2), with=F]
num.dat = subset[, lapply(.SD, as.numeric)]
dat = cbind(subset[, list(Date, Time)], num.dat)
rm(sybset, num.dat)
file.name = 'household_power_consumption.txt'
library(data.table)
dat = fread(file.name, na.strings = c('?'))
# 3. convert types
subset = dat[Date %in% c("1/2/2007","2/2/2007")]
num.dat = subset[, -c(1,2), with=F]
num.dat = subset[, lapply(.SD, as.numeric)]
file.name = 'household_power_consumption.txt'
library(data.table)
dat = fread(file.name, na.strings = c('?'))
# 3. convert types
sbset = dat[Date %in% c("1/2/2007","2/2/2007")]
num.dat = sbset[, -c(1,2), with=F]
num.dat = sbset[, lapply(.SD, as.numeric)]
setwd("~/_projects/datascience/3_explore")
file.name = 'household_power_consumption.txt'
library(data.table)
dat = fread(file.name, na.strings = c('?'))
# 3. convert types
sbset = dat[Date %in% c("1/2/2007","2/2/2007")]
num.dat = sbset[, -c(1,2), with=F]
num.dat = sbset[, lapply(.SD, as.numeric)]
dat
file.name = 'household_power_consumption.txt'
library(data.table)
dat = fread(file.name, na.strings = c('?'))
dat[,"?"]
dat[.S == "?"]
dat[,.s == "?"]
dat[,.S == "?"]
sbset = dat[Date %in% c("1/2/2007","2/2/2007")]
num.dat = sbset[, -c(1,2), with=F]
View(num.dat)
num.dat = num.dat[, lapply(.SD, as.numeric)]
dat = cbind(sbset[, list(Date, Time)], num.dat)
rm(sbset, num.dat)
str(dat)
dat$Frequency
View(dat)
View(dat)
?histograms
?histogram
??histogram
?hist
hist(dat$Global_active_power)
?par
par(col='red')
colors
colors()
colors()['red']
colors()[553]
par(col= colors()[553])
hist(dat$Global_active_power)
par(col= colors()[553])
hist(dat$Global_active_power)
op <- par(mfrow = c(2, 2), # 2 x 2 pictures on one plot
pty = "s")
op
par(op)
op <- par(no.readonly = TRUE)
par(op)
par("ylog")
plot(1 : 12, log = "y")
par("ylog") # TRUE
plot(1:2, xaxs = "i")
c(prof.pilots = 16, lawyers = 11, farmers = 10, salesmen = 9, physicians = 9,
mechanics = 6, policemen = 6, managers = 6, engineers = 5, teachers = 4,
housewives = 3, students = 3, armed.forces = 1))
par(col= colors()[553])
hist(dat$Global_active_power)
par('col')
par(col='red')
hist(dat$Global_active_power)
hist(dat$Global_active_power, col = 'red')
par(col.lab="red")
hist(dat$Global_active_power, col = 'red')
hist(dat$Global_active_power)
par(fg="red")
hist(dat$Global_active_power)
?hist
hist(dat$Global_active_power, col='red', xlab = 'blah')
par = nil
hist(dat$Global_active_power, col='red', xlab='Global Active Power (kilowatts)')
?hist
hist(dat$Global_active_power, col='red', xlab='Global Active Power (kilowatts)', main =''asdasd)
hist(dat$Global_active_power, col='red', xlab='Global Active Power (kilowatts)', main =''asdasd'')
hist(dat$Global_active_power, col='red', xlab='Global Active Power (kilowatts)', main ='asdasd')
hist(dat$Global_active_power, col='red', xlab='Global Active Power (kilowatts)', main ='Global Active Power')
dev.cur()
?Devices
png('plot1.png', 480, 480)
hist(dat$Global_active_power, col='red', xlab='Global Active Power (kilowatts)', main ='Global Active Power')
dev.off()
dat[1,]
dat[1,Date]
dat[3,Date]
dat[3,]
dat[,.S, by=Date]
dat[.S, by=Date]
dat[, by=Date]
dat[, .S,by=Date]
dat[, .N ,by=Date]
d[1,Date]
dat[1,Date]
dat[1,Date] + dat[1,Time]
dat[1,Time]
?as.Date
asDate
asDate()
class(dat[1,Time])
class(dat[1,Date])
"a"+"b"
paste(dat[1,Date], dat[1,Time])
as.Date(paste(dat[1,Date], dat[1,Time]))
paste(dat[1,Date], dat[1,Time])
?as.Time
?Time
t = paste(dat[1,Date], dat[1,Time])
striptime(t, "%d/%m/%Y %H:%M:%S")
?striptime
??striptime
strftime(t, "%d/%m/%Y %H:%M:%S")
class(strftime(t, "%d/%m/%Y %H:%M:%S"))
as.POSIXlt(t, "%d/%m/%Y %H:%M:%S")
?
as.POSIXlt
strptime(t, "%d/%m/%Y %H:%M:%S")
t1 = strptime(t, "%d/%m/%Y %H:%M:%S")
t1.
t1
class(t1)
t
?POSIXlt
summary(t)
summary(t1)
str(t1)
hour(t1)
minute(t1)
minutes(t1)
min(t1)
dat[, datetime:=strptime(paste(Date, Time), "%d/%m/%Y %H:%M:%S")]
t1
t1[1]
class(t1[1])
dat[, datetime:= strptime(paste(Date, Time), "%d/%m/%Y %H:%M:%S")]
dat[, date.time:= strptime(paste(Date, Time), "%d/%m/%Y %H:%M:%S")]
View(dat)
dat[, date.time:= paste(Date, Time)]
dat$date.time
View(dat)
dat[,lapply(date.time, strptime, "%d/%m/%Y %H:%M:%S")]
?strptime
t
as.ITime(t)
?as.ITime
dat[,lapply(date.time, as.ITime, strptime, "%d/%m/%Y %H:%M:%S")]
?lapply
dat[,sapply(date.time, as.ITime, strptime, "%d/%m/%Y %H:%M:%S")]
convert.date = function(str){ as.ITime(strptime(str, "%d/%m/%Y %H:%M:%S"))}
convert.date(t)
t3=convert.date(t)
day(t3)
days(t3)
convert.date = function(str){ as.IDateTime(strptime(str, "%d/%m/%Y %H:%M:%S"))}
t3=convert.date(t)
?IDateTime
convert.date = function(str){ IDateTime(strptime(str, "%d/%m/%Y %H:%M:%S"))}
t3=convert.date(t)
t3
dat[,lapply(date.time, convert.date]
dat[,lapply(date.time, convert.date)]
View(dat)
dat[1:9]
dat[, drop = 9:11]
dat[drop = 9:11]
str(dat)
dat[, 1:9]
dat[, 1:9, with=F]
dat[, 1:9]
dat[, 1:9, with=F]
dat = dat[, 1:9, with=F]
View(dat)
dat[,date_time := paste(Date, Time)]
View(dat)
dat[,lapply(date.time, convert.date)]
dat[,lapply(date_time, convert.date)]
View(dat)
dat[,lapply(Data, as.IDate)]
dat[,lapply(Date, as.IDate)]
datetime <- seq(as.POSIXct("2001-01-01"), as.POSIXct("2001-01-03"), by = "5 hour")
datetime
(af <- data.table(IDateTime(datetime), a = rep(1:2, 5), key = "a,idate,itime"))
dat[,lapply(date_time, convert.date)]
file.name = 'household_power_consumption.txt'
library(data.table)
dat = fread(file.name, na.strings = c('?'))
sbset = dat[Date %in% c("1/2/2007","2/2/2007")]
num.dat = sbset[, -c(1,2), with=F]
num.dat = num.dat[, lapply(.SD, as.numeric)]
file.name = 'household_power_consumption.txt'
library(data.table)
dat = fread(file.name, na.strings = c('?'))
dat = dat[Date %in% c("1/2/2007","2/2/2007")]
num.dat = dat[, -c(1,2), with=F]
num.dat = num.dat[, lapply(.SD, as.numeric)]
dat = cbind(dat[, list(Date, Time)], num.dat)
rm( num.dat)
date[, by=Date]
dat[, by=Date]
dat[, .S, by=Date]
plot(dat$Global_active_power, type="l",xaxt="n",xlab="", ylab="Global Active Power (kilowatts)")
date[, datetime := as.POSIXct(strptime(paste(Date, Time), "%d/%m/%Y %H:%M:%S"))]
dat[1,Datee]
dat[1,Date]
dat[1,Time]
paste(dat[1,Date], dat[1,Time])
t =paste(dat[1,Date], dat[1,Time])
as.POSIXct(t, "%d/%m/%Y %H:%M:%S")
as.POSIXct(t)
strptime(t, "%d/%m/%Y %H:%M:%S")
as.POSIXct(strptime(t, "%d/%m/%Y %H:%M:%S"))
c = as.POSIXct(strptime(t, "%d/%m/%Y %H:%M:%S"))
c
convert.date = function(str){   as.POSIXct(strptime(str, "%d/%m/%Y %H:%M:%S")}
convert.date = function(str){   as.POSIXct(strptime(str, "%d/%m/%Y %H:%M:%S"))}
dat[,date_time := paste(Date, Time)]
dat[,lapply(date_time, convert.date)]
View(dat)
dat[, date_time]
class(dat[1, date_time])
dat[,lapply(date_time, convert.date)]
dat[,ts:= as.POSIXct(date_time)]
View(dat)
plot(data=dat, Global_active_power ~ convert.date(date_time), type="l", ylab = "Global Active Power (kilowatts)", xlab=NA)
plot(data=dat, Global_active_power ~ convert.date(date_time), type="l", ylab = "Global Active Power (kilowatts)", xlab=NA)
plot(data=dat, Global_active_power ~ date_time, type="l", ylab = "Global Active Power (kilowatts)", xlab=NA)
?plot
?plot.function
plot(data=dat, Global_active_power ~ convert.date(date_time)ylab = "Global Active Power (kilowatts)")
plot(data=dat, Global_active_power ~ convert.date(date_time), ylab = "Global Active Power (kilowatts)")
plot(data=dat, Global_active_power ~ convert.date(date_time), ylab = "Global Active Power (kilowatts)", , type="l", )
plot(data=dat, Global_active_power ~ convert.date(date_time), ylab = "Global Active Power (kilowatts)", type="l", )
plot(data=dat, Global_active_power ~ convert.date(date_time), ylab = "Global Active Power (kilowatts)", type="l" )
?plot
plot(data=dat, Global_active_power ~ convert.date(date_time), ylab = "Global Active Power (kilowatts)", type="l" )
LANGUAGE=en
R_HOME
Sys.setenv(LANG = "en_US.UTF-8")
plot(data=dat, Global_active_power ~ convert.date(date_time), ylab = "Global Active Power (kilowatts)", type="l" )
plot(data=dat, Global_active_power ~ convert.date(date_time), ylab = "Global Active Power (kilowatts)", type="l" )
Sys.setenv(LANG='C')
plot(data=dat, Global_active_power ~ convert.date(date_time), ylab = "Global Active Power (kilowatts)", type="l" )
Sys.setlocale("LC_TIME", "English")
Sys.setlocale("LC_TIME", "C")
plot(data=dat, Global_active_power ~ convert.date(date_time), ylab = "Global Active Power (kilowatts)", type="l" )
plot(data=dat,   Sub_metering_1 ~ convert.date(date_time), type="n", ylab = "Energy sub metering", xlab=NA)
points(data=dat, Sub_metering_1 ~ convert.date(date_time), type="l", col="black")
points(data=dat, Sub_metering_2 ~ convert.date(date_time), type="l", col="red")
points(data=dat, Sub_metering_3 ~ convert.date(date_time), type="l", col="blue")
?plot
?legend
file.path('..','1.txt')
?hist
?par
setwd("~/_projects/datascience/3_explore/ExData_Plotting1")
# Plot 1 - Global Active Power
library(data.table)
source('~/_projects/datascience/3_explore/ExData_Plotting1/plot1.R')
source('~/_projects/datascience/3_explore/ExData_Plotting1/plot1.R')
source('~/_projects/datascience/3_explore/ExData_Plotting1/plot2.R')
source('~/_projects/datascience/3_explore/ExData_Plotting1/plot2.R')
# create date and time column
dat[,date_time:= paste(Date, Time)]
# Plot 2 - Global Active Power
library(data.table)
file.name = file.path('..', 'household_power_consumption.txt')
dat = fread(file.name, na.strings = c('?'))
# subset for the given dates
included.dates = c("1/2/2007", "2/2/2007")
dat = dat[Date %in% included.dates]
# convert data to numeric types
num.dat = dat[, -c(1,2), with=F]
num.dat = num.dat[, lapply(.SD, as.numeric)]
dat = cbind(dat[, list(Date, Time)], num.dat)
rm(num.dat)
# create date and time column
dat[,date_time:= paste(Date, Time)]
# dat[,lapply(date_time, convert.date)] # doesn't work with data.table
ConvertDate = function(str){
# converts the string into POSIXct date format
as.POSIXct(strptime(str, "%d/%m/%Y %H:%M:%S"))
}
# create the plot
Sys.setlocale("LC_TIME", "C") # translates weekdays into english
output.file = file.path('figure', 'plot2.png')
png(output.file, width=480, height=480)
plot(dat, Global_active_power ~ ConvertDate(date_time), xlab=NA, ylab = "Global Active Power (kilowatts)", type="l")
plot(dat$Global_active_power, type="l",xaxt="n",xlab="", ylab="Global Active Power (kilowatts)")
dev.off()
source('~/_projects/datascience/3_explore/ExData_Plotting1/plot2.R')
source('~/_projects/datascience/3_explore/ExData_Plotting1/plot2.R')
View(dat)
# Plot 2 - Global Active Power
library(data.table)
file.name = file.path('..', 'household_power_consumption.txt')
dat = fread(file.name, na.strings = c('?'))
# subset for the given dates
included.dates = c("1/2/2007", "2/2/2007")
dat = dat[Date %in% included.dates]
# convert data to numeric types
num.dat = dat[, -c(1,2), with=F]
num.dat = num.dat[, lapply(.SD, as.numeric)]
dat = cbind(dat[, list(Date, Time)], num.dat)
rm(num.dat)
# create date and time column
dat[,date_time:= paste(Date, Time)]
# dat[,lapply(date_time, convert.date)] # doesn't work with data.table!
ConvertDate = function(str){
# converts the string into POSIXct date format
as.POSIXct(strptime(str, "%d/%m/%Y %H:%M:%S"))
}
# create the plot
Sys.setlocale("LC_TIME", "C") # translates weekdays into english
output.file = file.path('figure', 'plot2.png')
png(output.file, width=480, height=480)
plot(dat, Global_active_power ~ ConvertDate(date_time), xlab=NA, ylab = "Global Active Power (kilowatts)", type="l")
# plot(dat$Global_active_power, type="l", xaxt="n", xlab="", ylab="Global Active Power (kilowatts)")
dev.off()
